{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    storageKey = 'products_store_v1';\n    products = [];\n    constructor() {\n      this.load();\n    }\n    generateId() {\n      return Date.now().toString() + '-' + Math.floor(Math.random() * 1000);\n    }\n    load() {\n      const data = localStorage.getItem(this.storageKey);\n      if (data) {\n        this.products = JSON.parse(data);\n      } else {\n        this.seed();\n      }\n    }\n    save() {\n      localStorage.setItem(this.storageKey, JSON.stringify(this.products));\n    }\n    seed() {\n      this.products = [{\n        id: this.generateId(),\n        name: 'Clavier mécanique',\n        description: 'Switchs bleus, RGB',\n        price: 79.9,\n        category: 'Informatique',\n        stock: 25\n      }, {\n        id: this.generateId(),\n        name: 'Casque Bluetooth',\n        description: 'Réduction de bruit',\n        price: 129.0,\n        category: 'Audio',\n        stock: 12\n      }, {\n        id: this.generateId(),\n        name: 'Lampe LED',\n        description: 'Bureau, 3 modes',\n        price: 19.99,\n        category: 'Maison',\n        stock: 50\n      }];\n      this.save();\n    }\n    getAll() {\n      return this.products;\n    }\n    getById(id) {\n      return this.products.find(p => p.id === id);\n    }\n    create(product) {\n      const newProduct = {\n        id: this.generateId(),\n        ...product\n      };\n      this.products.push(newProduct);\n      this.save();\n      return newProduct;\n    }\n    update(id, changes) {\n      const index = this.products.findIndex(p => p.id === id);\n      if (index !== -1) {\n        this.products[index] = {\n          ...this.products[index],\n          ...changes\n        };\n        this.save();\n        return this.products[index];\n      }\n      return undefined;\n    }\n    remove(id) {\n      this.products = this.products.filter(p => p.id !== id);\n      this.save();\n    }\n    static ɵfac = function ProductService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ProductService)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProductService,\n      factory: ProductService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}